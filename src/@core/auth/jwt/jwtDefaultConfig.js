// ** Auth Endpoints
import { MAIN_SERVICE_URL } from '../../../constants/consts'

export default {
  loginEndpoint: `${MAIN_SERVICE_URL}/vpn/admin/loginAdmin`,
  registerAdminEndpoint: `${MAIN_SERVICE_URL}/vpn/admin/registerAdmin`,
  getOwnProfileEndPoint: `${MAIN_SERVICE_URL}/vpn/admin/getAdminProfile`,
  getAdminsEndPoint: `${MAIN_SERVICE_URL}/vpn/admin/listAdmins`,
  updateOwnProfileEndPoint: `${MAIN_SERVICE_URL}/vpn/admin/updateAdminProfile`,
  updatePasswordEndPoint: `${MAIN_SERVICE_URL}/vpn/admin/updateAdminPassword`,
  getAdminEndPoint: `${MAIN_SERVICE_URL}/vpn/admin/getAdmin/`,
  updateAdminEndPoint: `${MAIN_SERVICE_URL}/vpn/admin/updateAdmin/`,
  deleteAdminEndPoint: `${MAIN_SERVICE_URL}/vpn/admin/deleteAdmin/`,
  getSupportTicketsEndPoint: `${MAIN_SERVICE_URL}/vpn/supportTicket/listSupportTicketsByAdmin`,
  closeSupportTicketEndPoint: `${MAIN_SERVICE_URL}/vpn/supportTicket/closeSupportTicket/`,
  getAdSettingsEndPoint: `${MAIN_SERVICE_URL}/vpn/appSetting/getSetting?setting=ad`,
  updateAdSettingsEndPoint: `${MAIN_SERVICE_URL}/vpn/appSetting/updateAdSetting`,
  getPaymentSettingsEndPoint: `${MAIN_SERVICE_URL}/vpn/appSetting/getSetting?setting=payment`,
  updatePaymentSettingsEndPoint: `${MAIN_SERVICE_URL}/vpn/appSetting/updatePaymentSetting`,
  getInAppUpdateSettingsEndPoint: `${MAIN_SERVICE_URL}/vpn/appSetting/getSetting?setting=inAppUpdate`,
  updateInAppUpdateSettingsEndPoint: `${MAIN_SERVICE_URL}/vpn/appSetting/updateInAppUpdateSetting`,
  getBlockedAppsSettingsEndPoint: `${MAIN_SERVICE_URL}/vpn/vpnSetting/getBlockedApps`,
  updateBlockedAppsSettingsEndPoint: `${MAIN_SERVICE_URL}/vpn/vpnSetting/updateBlockedApps`,
  addSSHKeyEndPoint: `${MAIN_SERVICE_URL}/vpn/sshkey/addSSHKey`,
  getPlansEndPoint: `${MAIN_SERVICE_URL}/vpn/plan/getPlans`,
  getTransactionsEndPoint: `${MAIN_SERVICE_URL}/vpn/transaction/listTransactionsByAdmin`,
  addPlanEndPoint: `${MAIN_SERVICE_URL}/vpn/plan/addPlan`,
  deletePlanEndPoint: `${MAIN_SERVICE_URL}/vpn/plan/deletePlan`,
  getPlanEndPoint: `${MAIN_SERVICE_URL}/vpn/plan/getPlan`,
  updatePlanEndPoint: `${MAIN_SERVICE_URL}/vpn/plan/updatePlan`,
  getCountriesEndPoint: `${MAIN_SERVICE_URL}/vpn/country/listCountries`,
  getContinentsEndPoint: `${MAIN_SERVICE_URL}/vpn/country/listContinents`,
  getCitiesEndPoint: `${MAIN_SERVICE_URL}/vpn/city/listCities`,
  addCityEndPoint: `${MAIN_SERVICE_URL}/vpn/city/addCity`,
  getCityEndPoint: `${MAIN_SERVICE_URL}/vpn/city/getCity`,
  updateCityEndPoint: `${MAIN_SERVICE_URL}/vpn/city/updateCity`,
  getSubscriptionsEndPoint: `${MAIN_SERVICE_URL}/vpn/subscription/listSubscriptions`,
  disableSubscriptionsEndPoint: `${MAIN_SERVICE_URL}/vpn/subscription/disableSubscription`,
  enableSubscriptionsEndPoint: `${MAIN_SERVICE_URL}/vpn/subscription/enableSubscription`,
  getCloudProvidersEndPoint: `${MAIN_SERVICE_URL}/vpn/cloud/getCloudProviders`,
  getContinentsEndPointCloudId: `${MAIN_SERVICE_URL}/vpn/cloud/getContinents`,
  getCountriesByContinentEndPoint: `${MAIN_SERVICE_URL}/vpn/cloud/getCountries`,
  getCitiesByCountryEndPoint: `${MAIN_SERVICE_URL}/vpn/cloud/getCities`,
  getRegionsByCityEndPoint: `${MAIN_SERVICE_URL}/vpn/cloud/getRegions`,
  getInstancesByRegionEndPoint: `${MAIN_SERVICE_URL}/vpn/cloud/getInstances`,
  getInstanceSummaryEndPoint: `${MAIN_SERVICE_URL}/vpn/cloud/getInstanceSummary`,
  getImagesEndPoint: `${MAIN_SERVICE_URL}/vpn/cloud/getUbuntuImages`,
  getDNSProvidersEndPoint: `${MAIN_SERVICE_URL}/vpn/vpnSetting/getDNSProviders`,
  addServerEndPoint: `${MAIN_SERVICE_URL}/vpn/server/initServer`,
  getServersEndPoint: `${MAIN_SERVICE_URL}/vpn/server/listServers`,
  startServerEndPoint: `${MAIN_SERVICE_URL}/vpn/server/startServer`,
  stopServerEndPoint: `${MAIN_SERVICE_URL}/vpn/server/haltServer`,
  getCustomersEndPoint: `${MAIN_SERVICE_URL}/vpn/customer/listCustomers`,
  getVPNConnectionLogsEndPoint: `${MAIN_SERVICE_URL}/vpn/vpnconnectionlog/listVPNConnectionLogs`,
  getServerLoadTypesEndPoint: `${MAIN_SERVICE_URL}/vpn/vpnSetting/getServerLoadTypes`,
  getCountryServersLoadStatsEndPoint: `${MAIN_SERVICE_URL}/vpn/server/listCountryServersLoadStats`,
  getMainVpnProtocolsEndPoint: `${MAIN_SERVICE_URL}/vpn/vpnSetting/getMainVPNProtocols`,
  getVpnProtocolsEndPoint: `${MAIN_SERVICE_URL}/vpn/vpnSetting/getVPNProtocols`,
  getStatsEndPoint: `${MAIN_SERVICE_URL}/vpn/vpn/getStats`,

  // ** This will be prefixed in authorization header with token
  // ? e.g. Authorization: JWT <token>
  tokenType: 'JWT',

  // ** Value of this property will be used as key to store JWT token in storage
  storageTokenKeyName: 'accessToken'
}
